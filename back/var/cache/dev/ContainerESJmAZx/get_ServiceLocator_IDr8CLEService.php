<?php

namespace ContainerESJmAZx;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_IDr8CLEService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.iDr8CLE' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.iDr8CLE'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Controller\\EventsController::createEvents' => ['privates', '.service_locator.0y7zlJq', 'get_ServiceLocator_0y7zlJqService', true],
            'App\\Controller\\EventsController::deleteEvents' => ['privates', '.service_locator.Q43bnhM', 'get_ServiceLocator_Q43bnhMService', true],
            'App\\Controller\\EventsController::getAllEvents' => ['privates', '.service_locator.NCb_sxm', 'get_ServiceLocator_NCbSxmService', true],
            'App\\Controller\\EventsController::getEvents' => ['privates', '.service_locator.cbokvuV', 'get_ServiceLocator_CbokvuVService', true],
            'App\\Controller\\EventsController::updateEvents' => ['privates', '.service_locator.MbAeCxw', 'get_ServiceLocator_MbAeCxwService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'App\\Controller\\EventsController:createEvents' => ['privates', '.service_locator.0y7zlJq', 'get_ServiceLocator_0y7zlJqService', true],
            'App\\Controller\\EventsController:deleteEvents' => ['privates', '.service_locator.Q43bnhM', 'get_ServiceLocator_Q43bnhMService', true],
            'App\\Controller\\EventsController:getAllEvents' => ['privates', '.service_locator.NCb_sxm', 'get_ServiceLocator_NCbSxmService', true],
            'App\\Controller\\EventsController:getEvents' => ['privates', '.service_locator.cbokvuV', 'get_ServiceLocator_CbokvuVService', true],
            'App\\Controller\\EventsController:updateEvents' => ['privates', '.service_locator.MbAeCxw', 'get_ServiceLocator_MbAeCxwService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.y4_Zrx.', 'get_ServiceLocator_Y4Zrx_Service', true],
        ], [
            'App\\Controller\\EventsController::createEvents' => '?',
            'App\\Controller\\EventsController::deleteEvents' => '?',
            'App\\Controller\\EventsController::getAllEvents' => '?',
            'App\\Controller\\EventsController::getEvents' => '?',
            'App\\Controller\\EventsController::updateEvents' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\EventsController:createEvents' => '?',
            'App\\Controller\\EventsController:deleteEvents' => '?',
            'App\\Controller\\EventsController:getAllEvents' => '?',
            'App\\Controller\\EventsController:getEvents' => '?',
            'App\\Controller\\EventsController:updateEvents' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
